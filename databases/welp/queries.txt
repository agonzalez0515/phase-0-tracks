# QUERIES!

###### You've joined two tables before. How do you join three?
  We can join three by adding another comma in FROM.


###### There are some repetitive columns if we choose to view all fields. Choose instead to just view the user's names, the business name, the star rating, and the comment.

SELECT users.first_name, users.last_name, reviews.stars, reviews.comment, businesses.name 
FROM users, reviews, businesses
WHERE business_id = businesses.id AND user_id = users.id;

	Mandy|Kaling|4|Awesome!!|Lotus Yoga
	Angela|Jolie|1|Nope!!|Sushi World
	Bradford|Pitt|5|THE BEST!!|Lotus Yoga



###### How do you view the data of all three tables for just one particular business? 


SELECT businesses.name, reviews.stars, reviews.comment, users.first_name, users.last_name 
FROM businesses 
JOIN reviews 
ON businesses.id = reviews.business_id 
JOIN users 
ON users.id = reviews.user_id 
WHERE businesses.id = 1;

Lotus Yoga|4|Awesome!!|Mandy|Kaling
Lotus Yoga|5|THE BEST!!|Bradford|Pitt



///////////////////////////// 
8.4 personal Notes 
////////////////////////////

INSERT INTO businesses (name) VALUES ("Lotus Yoga");
INSERT INTO businesses (name) VALUES ("Sushi World");
INSERT INTO businesses (name) VALUES ("Plumbing by Janet");

INSERT INTO users (first_name, last_name) VALUES ("Bradford", "Pitt");
INSERT INTO users (first_name, last_name) VALUES ("Mandy", "Kaling");
INSERT INTO users (first_name, last_name) VALUES ("Angela", "Jolie");

//

CREATE TABLE reviews (
  id INTEGER PRIMARY KEY,
  stars INT,
  comment VARCHAR(255),
  business_id INT,
  user_id INT, 
  FOREIGN KEY (business_id) REFERENCES businesses(id),
  FOREIGN KEY (user_id) REFERENCES users(id)
);

// Populate your reviews table with a few pieces of data. You'll need to provide valid integers for both of the foreign keys (one valid id of a user, and one valid id of a business). An example review might consist of 5 stars, the text "great food!", a business ID of 1, and a user ID of 1 (provided you have a business with a primary key of 1 and a user with a primary key of 1).

INSERT INTO reviews (stars, comment, business_id, user_id) VALUES (4, "Awesome!!", 1, 2);
INSERT INTO reviews (stars, comment, business_id, user_id) VALUES (1, "Nope!!", 2, 3);
INSERT INTO reviews (stars, comment, business_id, user_id) VALUES (5, "THE BEST!!", 1, 1);
